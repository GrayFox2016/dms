plugins {
    id 'groovy'
    id 'java'
}

group 'org.segment'
version '1.0'

final String artifactId = 'dms'

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
//    mavenCentral()
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.30'
    compile 'org.codehaus.groovy:groovy-all:2.4.19'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.68'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.18'
    compile group: 'commons-net', name: 'commons-net', version: '3.6'

    compile group: 'com.h2database', name: 'h2', version: '1.4.200'
    compile group: 'io.etcd', name: 'jetcd-core', version: '0.3.0'
//    compile group: 'redis.clients', name: 'jedis', version: '3.2.0'
    compile group: 'com.github.adyliu', name: 'zkclient', version: '2.2.0'

    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'com.google.auto.value', name: 'auto-value', version: '1.7.2'
    compile group: 'com.spotify', name: 'docker-client', version: '8.16.0'
//    compile group: 'org.hyperic', name: 'sigar', version: '1.6.4'

    compile group: 'it.sauronsoftware.cron4j', name: 'cron4j', version: '2.2.5'
    compile group: 'com.github.kevinsawicki', name: 'http-request', version: '6.0'

    compile fileTree(dir: 'vendor', includes: ['*.jar', '*.so', '*.dll'])

    compile project(':segmentd')
    compile project(':segmentweb')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.4'
}

String libDir = 'dist'

task buildToRun(type: Copy) {
    from configurations.runtime
    into libDir
}

task clearLibDir(type: Delete) {
    file(libDir).deleteDir()
}

buildToRun.dependsOn clearLibDir